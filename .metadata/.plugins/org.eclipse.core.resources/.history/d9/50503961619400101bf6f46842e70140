package preorderTraverserBT;

public class ClientBT {
    public static void main(String[] args) {
        Node root = new Node(1);
        root.left = new Node(2);
        root.right = new Node(3);
        
        root.left.right = new Node(5);
        root.right.right = new Node(8);
        
        root.left.left = new Node(4);
        root.right.left = new Node(7);
        
        root.left.right.left = new Node(6);
        root.right.right.left = new Node(9);
        root.right.right.right = new Node(10);
        
        BinaryTree bt = new BinaryTree();
        bt.preorderTraverser(root);
    }
}

class Node {
    public int data;
    public Node left;
    public Node right;

    public Node(int data) {
        this.data = data;
        left = null;
        right = null;
    }
}

class BinaryTree {
    // Preorder traversal method
    public void preorderTraverser(Node node) {
        if (node == null) {
            return;  // If the node is null, just return
        }
        // Print the current node's data
        System.out.println(node.data);
        // Recursively traverse the left and right subtree
        preorderTraverser(node.left);
        preorderTraverser(node.right);
    }
}
